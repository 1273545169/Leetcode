### 题目描述

[114. 二叉树展开为链表](https://leetcode.cn/problems/flatten-binary-tree-to-linked-list/)

### 思路解析

先进行先序遍历，再展开

```python

class Solution:
    def flatten(self, root: Optional[TreeNode]) -> None:
        """
        Do not return anything, modify root in-place instead.
        """
        
        if not root:
            return 

        orderLise = []
        self.preOrder(root, orderLise)

        for i in range(1, len(orderLise)):
            pre, cur = orderLise[i - 1], orderLise[i]
            pre.left = None
            pre.right = cur


    def preOrder(self, root, orderLise):
        stack = [root]
        while stack:
            head = stack.pop()
            orderLise.append(head)
            if head.right:
                stack.append(head.right)
            if head.left:
                stack.append(head.left)
        return orderLise

```

进行先序遍历的同时展开

```python

class Solution:
    def flatten(self, root: Optional[TreeNode]) -> None:
        """
        Do not return anything, modify root in-place instead.
        """

        if not root:
            return 

        pre = None
        stack = [root]
        while stack:
            head = stack.pop()

            if pre:
                pre.left = None
                pre.right = head
            pre = head
            
            if head.right:
                stack.append(head.right)
            if head.left:
                stack.append(head.left)




```
